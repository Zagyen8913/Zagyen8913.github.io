var lustla={};(function(){function lst(input){lustla.run(input);}function safeRun(input){lustla.req.run(input);}lustla.onconsole=function(){};window.addEventListener("error",function(e){lustla.log(e.message);});var kk=[];window.addEventListener("keydown",function(event){var k=String(event.key).toLowerCase();if(!kk.includes(k)){if(k==" "){var nk="space";kk.push(nk);}kk.push(k);lustla.setVar("#lastKeyPressed",k);}if(!kk.includes("any")){kk.push("any");}});window.addEventListener("keyup",function(event){var k=String(event.key).toLowerCase();if(kk.includes(k)){if(k==" "){var nk="space";kk.splice(kk.indexOf(nk),1);}kk.splice(kk.indexOf(k),1);}if(kk.length==1&&kk[0]=="any"){kk.splice(kk.indexOf("any"),1);}});lustla.allowConsoleClear=true;lustla.functions={"log":function(data){lustla.log(data);},"clearConsole":function(data){lustla.onconsole({type:"clear"});if(lustla.allowConsoleClear===true){console.clear();if(document.querySelector("#lustlaOutput")!==null){document.querySelector("#lustlaOutput").innerText="";}}},"logB64":function(data){data=window.atob(data);lustla.functions.log(data);},"execute":function(data){lustla.run(data,"doNotResetVars");},"sin":function(data){lustla.setVar("#output",Math.sin(data));},"cosin":function(data){lustla.setVar("#output",Math.cos(data));},"angle":function(data){d=data.split(" ");lustla.setVar("#output",Math.atan2(data[0],data[1]));},"error":function(data){lustla.error(data);},"warn":function(data){lustla.log("Warning: "+data);},"setVar":function(data){if(data.startsWith("$")){lustla.setVar(data.substr(0,data.indexOf(' ')),data.substr(data.indexOf(' ')+1));}else{lustla.error("SyntaxError Unexpected text in variable definition. Make sure you are using dollar signs ($) before your variable names.");}},"getVar":function(data){/*lustla.log("Variable \""+data+"\": "+lustla.getVar(data));*/lustla.setVar("#output",lustla.getVar(data));},"b64encode":function(data){try{lustla.setVar("#output",btoa(data));}catch(err){lustla.error("TypeError String to be encoded contains bad characters.");}},"b64decode":function(data){try{lustla.setVar("#output",atob(data));}catch(err){lustla.error("TypeError String to be decoded is not correctly encoded.");}},"random":function(data){if(data.includes(" ")){var dat=data.split(" ");lustla.setVar("#output",lustla.req.random(Number(dat[0]),Number(dat[1])));}else{lustla.error("SyntaxError Not enough values passed to random.");}},"requireComponent":function(data){if(data in lustla.comps){lustla.usedComps.push(data);}else{lustla.error("ReferenceError Use of unknown component \""+data+"\".");}},"comp":function(data){var inpName=data.splitAtFirst(":")[0];var inpValue=data.splitAtFirst(":")[1];if(lustla.usedComps.includes(inpName)&&inpName in lustla.comps){lustla.comps[inpName](inpValue);}else if(!(inpName in lustla.comps)){lustla.error("ReferenceError Use of unknown component \""+inpName+"\".");}else if(!lustla.usedComps.includes(inpName)){lustla.error("ReferenceError Component \""+inpName+"\" was not one of the required components. Use \"requireComponent\" to use components.");}},"round":function(data){var inpNum=Number(data);if(!isNaN(inpNum)){lustla.setVar("#output",(inpNum>=0||-1)*Math.round(Math.abs(inpNum)));}else{lustla.error("TypeError Invalid number passed to \"round\".");}},"floor":function(data){var inpNum=Number(data);if(!isNaN(inpNum)){lustla.setVar("#output",(inpNum>=0||-1)*Math.floor(Math.abs(inpNum)));}else{lustla.error("TypeError Invalid number passed to \"floor\".");}},"isset":function(data){if(data in lustla.variables){lustla.setVar("#output",1);}else{lustla.setVar("#output",0);}},"length":function(data){lustla.setVar("#output",data.length);},"replace":function(data){lustla.req.multi=[data];lustla.req.multifunc="replace";},"split":function(data){lustla.req.multi=[data];lustla.req.multifunc="split";},"with":function(data){if(typeof lustla.req.multifunc!==undefined){if(lustla.req.multifunc=="split"){var splitted=lustla.req.multi[0].split(data);lustla.setArray("#output",splitted);}else if(lustla.req.multifunc=="replace"){lustla.req.multi[1]=data;}}},"in":function(data){if(typeof lustla.req.multifunc!==undefined){if(lustla.req.multifunc=="split"&&lustla.req.multi.length==1){var splitted=data.split(lustla.req.multi[0]);lustla.setArray("#output",splitted);}else if(lustla.req.multifunc=="replace"&&lustla.req.multi.length==2){var d1=lustla.req.multi[0].replace(/[-\/\\^$*+?.()|[\]{}]/g,'\\$&');var d2=lustla.req.multi[1];var d3=data;lustla.setVar("#output",d3.replace(RegExp(d1,"g"),d2));}}},"substr":function(data){var da1=data.split(":")[0];var da2=data.splitAtFirst(":")[1];var d=da1.split(" ");lustla.setVar("#output",da2.substr(...d));},"substring":function(data){da1=data.split(":")[0];da2=data.splitAtFirst(":")[1];d=da1.split(" ");lustla.setVar("#output",da2.substring(...d));},"slice":function(data){da1=data.split(":")[0];da2=data.splitAtFirst(":")[1];d=da1.split(" ");lustla.setVar("#output",da2.slice(...d));},"repeat":function(data){da1=data.split(":")[0];da2=data.splitAtFirst(":")[1];lustla.setVar("#output",Array(Number(da1)).join(da2));},"startWarnings":function(data){if(data=="0"){lustla.startWarnings=false;}else if(data=="1"){lustla.startWarnings=true;}else{lst_run.lustla.req.run("error:TypeError Invalid number in \"startWarnings\" function.");}},"":function(){},"LSTVG":function(){lustla.lstvg_data="<svg>";lustla.req.functionCache=Object.assign({},lustla.lstvg,lustla.functions);}};lustla.lstvg_accepted_cmds=["a","animate","animateMotion","animateTransform","circle","clipPath","color-profile","defs","ellipse","feBlend","feColorMatrix","feComponentTransfer","feComposite","feConvolveMatrix","feDiffuseLighting","feDisplacementMap","feDistantLight","feDropShadow","feFlood","feFuncA","feFuncB","feFuncG","feFuncR","feGaussianBlur","feImage","feMerge","feMergeNode","feMorphology","feOffset","fePointLight","feSpecularLighting","feSpotLight","feTile","feTurbulence","filter","g","hatch","hatchpath","image","line","linearGradient","marker","mask","mesh","meshgradient","meshpatch","meshrow","metadata","mpath","path","pattern","polygon","polyline","radialGradient","rect","set","solidcolor","stop","style","switch","symbol","text","textPath","title","tspan","unknown","use","view"];lustla.lstvg={};lustla.lstvg.LSTVG_END=function(){lustla.lstvg_data=lustla.lstvg_data+"</svg>";lustla.req.functionCache=lustla.functions;/*el=document.createElement("div");el.innerHTML=lustla.lstvg_data;el=el.querySelector("svg");*/lustla.setVar("#output","data:image/svg+xml;base64,"+btoa(lustla.lstvg_data.replace(/\n/g,"")));};lustla.lstvg.attr=function(data){var dat=[];dat[0]=data.splitAtFirst(" ")[0].replace(/\W/g,"");dat[1]=data.splitAtFirst(" ")[1].replace(/\"/g,"");var da=[];da[0]=lustla.lstvg_data.lastIndexOf("/>");da[1]=lustla.lstvg_data.lastIndexOf(">")-1;if(da[1]>da[0]){da[0]=da[1]+1;}da=da[0];var fin_da=" "+dat[0]+"=\""+dat[1]+"\"";lustla.lstvg_data=lustla.lstvg_data.slice(0,da)+fin_da+lustla.lstvg_data.slice(da);};lustla.lstvg.addText=lustla.lstvg.addtext=function(data){lustla.lstvg_data+=data;}lustla.lstvg_accepted_cmds.forEach(function(itm,indx){lustla.lstvg[itm]=function(data,fname){if(data==="start"){lustla.lstvg_data+="<"+fname+">\n";}else if(data==="end"){lustla.lstvg_data+="</"+fname+">\n";}else{lustla.lstvg_data+="<"+fname+"/>\n";}};});lustla.defaultVariables={};lustla.startWarnings=true;lustla.comps={};lustla.renderInterval=100;lustla.addComp=function(name,value){lustla.comps[name]=value;};lustla.info=function(){console.log("Lustla ver 0.1")};lustla.run=async function(script,attrs){return new Promise(async function(endScript){if(attrs!=="doNotResetVars"){lustla.req.reset();}scriptSplitter=/[\n;]/g;script=script.split(scriptSplitter);for(i=0;i<script.length;i++){script[i]=script[i].replace(/\\n/g,"\n")script[i]=script[i].replace(/\\s/g,";")}script=script.filter(function(el){return el!=="";});(async function(){var helper=0;var line=0;function noodle(){waitTime=0;itm=script[line]+"";mths=itm.split("(");mths.shift();mths.forEach(function(item,index){mthname=item.split(")")[0];mthreg=/[+\-*\/^]/g;if(mthname.split(mthreg).length>1){evaluated=mthname;mth1=evaluated.split(mthreg)[0];mth2=evaluated.split(mthreg)[1];if(mth1 in lustla.variables&&isNaN(Number(mth1))){mth1=lustla.getVar(mth1);}if(mth2 in lustla.variables&&isNaN(Number(mth2))){mth2=lustla.getVar(mth2);}omth1=mth1;omth2=mth2;mth1=Number(mth1);mth2=Number(mth2);if(isNaN(mth1)||isNaN(mth2)){lustla.error("TypeError Invalid number in math function. Math error in "+omth1+" or "+omth2);}else{if(mthname.includes("+")){evaluated=mth1+mth2;}if(mthname.includes("-")){evaluated=mth1-mth2;}if(mthname.includes("*")){evaluated=mth1*mth2;}if(mthname.includes("/")){evaluated=mth1/mth2;}if(mthname.includes("^")){evaluated=mth1**mth2;}itm=itm.replace("("+mthname+")",evaluated);}}else{/*varname=item.substr(0,item.indexOf(')'));itm1=lustla.getVar(varname).split(scriptSplitter);itm2=itm.splitAtFirst("("+varname+")");itm=[];if(itm2.length==2){itm[0]=itm2[0];for(j=0;j<itm1.length;j++){if(typeof itm[j]!=="string"){itm[j]="";}itm[j]+=itm1;}itm[itm.length]=itm2[1];window.debugMe=itm;script[i]=itm;script=script.flat(Infinity);}itm=script[i];console.log(script);console.log(itm)*/varname=item.split(")")[0];itm=itm.replace("("+varname+")",lustla.getVar(varname));}});if(script[line]!==undefined){var a=false;if(itm==="-end-"){lustla.log("The \"-end-\" function is deprecated. Use \"end\" instead.");line=script.length;}else if(itm==="end"){line=script.length;}else if(itm.startsWith("goto ")){line=script.indexOf("start "+itm.split("goto ")[1]);}else if(itm.startsWith("if ")){correctTypes=["!=","=",">","<"];dat=itm.split("if ")[1];type=dat.match(/(!=)|(=)|(>)|(<)/g)if(type!==null&&type.length===1){type=type[0];numify="String";if(type==">"||type=="<"){numify="Number";}dat1=dat.split(type)[0];dat2=dat.split(type)[1];type=type.replace("=","==");dat3="err";if(dat2.includes(" goto ")){dat2=dat2.split(" goto ")[0];dat3=dat.split(" goto ")[1];eval("out = ("+numify+"(dat1)"+type+numify+"(dat2));");if(out==="true"||out===true){line=script.indexOf("start "+dat3);}}}else{type=parseInt(dat);data=dat;if(type===1){data_out=data.substr(data.indexOf(String(type))+1);dat3="err";if(data_out.includes(" goto ")){dat3=data_out.split(" goto ")[1];line=script.indexOf("start "+dat3);}}else if(type!==0){lustla.error("TypeError Unknown or non-boolean value passed to if statement.");}}}else if(itm.startsWith("start ")){if(lustla.startWarnings===true){lustla.log("A \"start\" command was placed before \"end\". This will cause your sections to run when not called.");}}else if(itm.startsWith("wait ")){nm=Number(itm.split("wait ")[1])if(!isNaN(nm)){waitTime=nm;}else{lustla.error("TypeError Invalid number used with the wait command.")}}else{a=lustla.req.run(itm,script);/*if(typeof a=="number"){*//*line=a;*//*}*/}line++;helper++;var run=function(){if(line<script.length){//nn=*//*requestAnimationFrame(()=>{*/if(waitTime!==0||(helper%lustla.renderInterval==0&&lustla.renderInterval!==-1)){setTimeout(noodle,waitTime);helper=0;}else{noodle();}/*})*/;/*clearTimeout(nn);*/}else{endScript();}}if(a!==false){(async function(){await a run();})()}else{run();}}else{console.log("???");endScript();}}noodle();})();})};lustla.req={};lustla.req.reset=function(){lustla.variables={"#commands":Object.keys(lustla.functions).join(", ")};lustla.usedComps=[];lustla.req.functionCache=lustla.functions;lustla.lstvg_data="<svg>";}lustla.req.reset();String.prototype.splitAtFirst=function(splitter=""){if(this.includes(splitter))return [this.substr(0,this.indexOf(splitter)),this.substr(this.indexOf(splitter)+splitter.length)];else return [this];/*Thanks for the help, StackOverflow!*/}lustla.setVar=function(name,value){lustla.variables[name]=value;};lustla.setArray=function(name,array){lustla.setVar("#output","Array");lustla.setVar("#output.length",array.length);for(i=0;i<array.length;i++){lustla.setVar("#output."+i,array[i]);}}lustla.getVar=function(varname){out="undefined"if(varname.startsWith("%")){tv=varname.split("%")[1];if(kk.includes(tv)){out=1;}else{out=0;}}else{out1=lustla.variables[varname];if(out1!==undefined){out=out1;}else{lustla.error("ReferenceError Undefined variable "+varname+".");}}return out;}lustla.req.setDefaultVar=function(name,value){lustla.defaultVariables[name]=value;};lustla.req.setDefaultVar("#commands",Object.keys(lustla.req.functionCache).join(", "));lustla.req.run=function(script,context){return new Promise(function(resolve,reject){var inputScript=script.splitAtFirst(":");if(typeof inputScript[1]==="undefined"){inputScript[1]="";}inputScript[0]=inputScript[0].replace(/^\s+/g,'');inputScript[1]=inputScript[1].replace(/^\s+/g,'');if(inputScript[1].startsWith(":")){inputScript[1]=inputScript[1].slice(1);}if(inputScript[0]!==""){/*for(i=2;i<inputScript.length;i++){inputScript[1]+=":"+inputScript[i];}*/if(inputScript[0] in lustla.req.functionCache){var inp=inputScript[1]var cmdn=inputScript[0]var cmd=lustla.req.functionCache[cmdn];if(typeof cmd==="function"){lustla.setVar("#lastCommand",script);var cmd_run=cmd(inputScript[1],inputScript[0],context);if(typeof cmd_run==='object'&&typeof cmd_run.then==='function'){cmd_run.then(function(output){resolve(output);})}else{resolve(cmd_run);}}else if(typeof cmd==="string"){lustla.req.run(cmdn+":"+inp).then(function(j){resolve(j)});}}else{lustla.error("SyntaxError Function \""+inputScript[0]+"\" is undefined.");}}});};lustla.req.fts=function(func){func=func.toString();func=func.substr(func.indexOf('{')+1,func.length).substr(0,func.substr(func.indexOf('{')+1,func.length).lastIndexOf('}'))return func;};lustla.req.random=function(min,max){return Math.floor(Math.random()*(max-min+1))+min;}lustla.log=function(data){console.log(data);lustla.onconsole({type:"out",text:data});if(document.querySelector("#lustlaOutput")!==null){document.querySelector("#lustlaOutput").innerText+=data+"\n";}lustla.setVar("#lastLog",data);}lustla.error=function(data){lustla.log("Uncaught "+data.substr(0,data.indexOf(' '))+": "+data.substr(data.indexOf(' ')+1));}if(typeof window.onlustlaloaded=="function"){window.onlustlaloaded();}})()
